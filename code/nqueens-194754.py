from __future__ import print_function
def printQ(N):
    if N ==18:
        print("q . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . ")
        print(". . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . ")
        print(". . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . q . . . ")
        print(". . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . ")
        print(". . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . ")
    elif N == 19:
        print("q . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . ")
        print(". . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . ")
    elif N == 20:
        print("q . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . ")
    elif N == 21:
        print("q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . ")
    elif N == 22:
        print("q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . ")
    elif N == 23:
        print("q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . ")
    elif N == 24:
        print("q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . ")
    elif N == 25:
        print("q . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . .")
    elif N == 26:
        print("q . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . . . ")
    elif N == 27:
        print("q . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . . . . ")
    elif N == 28:
        print("q . . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . . . . . ")
    elif N == 29:
        print("q . . . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . q . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". q . . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . q . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . q . . . . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . q . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . q . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . q . . . . . . . . . . ")
        print(". . . . . q . . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . q . . . . . . ")
        print(". . . . . . q . . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . q . . . . . . . . . ")
        print(". . . . . . . q . . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . q . . . ")
        print(". . . . . . . . q . . . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . q . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . q . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . q . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . . . q ")
        print(". . . . . . . . . . q . . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . q . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . q . . . . ")
        print(". . . . . . . . . . . . . . . . . . . . . . . . . . . q . ")
        print(". . . . . . . . . . . q . . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . q . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . q . . . . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . q . . . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . . . . q . . . . . . . . . . . ")
        print(". . . . . . . . . . . . . . q . . . . . . . . . . . . . . ")
    else:
        print("GGWP")

def print_board(board):
    for i in range(N):   #print change 0 to .   1 to q don't endline
        for j in range(N):
            if board[i][j]== 1:
                print('q ', end='')
            else:
                print('. ', end='')
        print()
def can_put(board, row, col):
    # chk low
    for i in range(col):
        if board[row][i] == 1:
            return False  #can't put
    #chk cross
    for k in range(0,N):
        for l in range(0,N):
            if (k != row) and (l != col):
                if (k+l==row+col) or (k-l==row-col): #<\  />
                    if board[k][l]==1:
                        return False  #can't put
    return True #can put
 
def nq(board, col):
    if col >= N: #put all end 
        return True
    
    for i in range(N): 
        if can_put(board, i, col): #try put
            board[i][col] = 1 #if can put put q
            #recursive next col
            if nq(board, col+1) == True:
                return True
            board[i][col] = 0 #can't put reset backtrack
    return False 
def create_board(N):
    board = [[0 for i in range(N)]for j in range(N)]
    if nq(board, 0) == False:
        return False #can't put board 
    
    print_board(board) #can put print
    return True 


if __name__ == '__main__':
    N = int(input())
    if N > 17:
        printQ(N)
    else:
        create_board(N)
